---
openapi: 3.0.0
info:
  title: User API
  description: This is the API of the User service
  contact:
    email: benoit.catta@imt-atlantique.fr
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/UE-archi-distribuees/User/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/UE-archi-distribuees/Movie/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /:
    get:
      tags:
      - developers
      summary: home page of the service
      description: |
        Nothing to do
      operationId: home
      responses:
        "200":
          description: welcome message
          content:
            text/html:
              schema:
                type: string
                example: <h1>Test</h1>
  /user/booking/{userid}:
    get:
      tags:
      - developers
      summary: get the movies by userid
      description: |
        Get the movies for a given userid
      operationId: get_movie_by_userid
      parameters:
      - name: userid
        in: path
        description: user.
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1
          minimum: 1
          type: string
      responses:
        "200":
          description: Movies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieList'
        "400":
          description: bad input parameter
  /user/booking/{userId}/{date}:
    get:
      tags:
        - developers
      summary: get user booking for a given date
      description: |
        Get bookings for a given userid and date
      operationId: get_user_booking_bydate
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date
        in: path
        description: The booking date
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Movies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        "404":
          description: not found
        "400":
          description: bad input parameter
components:
  schemas:
    MovieList:
      type: array
      items:
        type: object
        allOf:
          - $ref: '#/components/schemas/MovieItem'
    MovieItem:
      required:
        - director
        - id
        - rating
        - title
      type: object
      properties:
        director:
          type: string
          example: Paul McGuigan
        id:
          type: string
          example: "720d006c-3a57-4b6a-b18f-9b713b073f3c"
        rating:
          type: string
          example: "7.4"
        title:
          type: string
          example: The Martian
    Schedule:
      required:
        - date
        - movies
      type: object
      properties:
        date:
          type: string
          example: 20151130
        movies:
          type: array
          items:
            type: string
            example: 276c79ec-a26a-40a6-b3d3-fb242a5947b6